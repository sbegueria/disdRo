% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/disdRo_functions.R
\name{dsd_integrate}
\alias{dsd_integrate}
\title{Compute DSVD integrated variables}
\usage{
dsd_integrate(indir, script = NULL, outfile = NULL, interp = "linear")
}
\arguments{
\item{indir}{A character vector with the url of the directory tree that
contains the raw disdrometric data.}

\item{script}{A character vector with the url of the Perl script. Defaults
to the installation directory of the \code{disdRo} package.}

\item{outfile}{A character vector with the url of the output file. Defaults
to a random file name in the session's temporary directory.}

\item{interp}{A character vector indicating the interpolation method to
use for inputing drop sizes and velocities within the bins
of the DSVD matrix. One of `middle`, `uniform`, and `linear`,
defaulting to `middle`.}
}
\value{
A data frame with the following items:
\describe{
   \item{type}{Disdrometer type, currently one of 'Thies' or 'Parsivel' (Factor)}
   \item{serial}{Sensor serial number (Numeric)}
   \item{time}{Date and time of the record (POSIXct)}
   \item{seconds}{Number of seconds since 1970-01-01 00:00:00 (Numerica)}
   \item{synop}{Synop code (Factor)}
   \item{r}{Precipitation intensity computed from the DSVD matrix, mm h−1 (Numeric)}
   \item{p}{Precipitation amount computed from the DSVD matrix, mm (Numeric)}
   \item{m}{Liquid water content computed from the DSVD matrix, g m-3 (Numeric)}
   \item{z}{Radar reflectivity computed from the DSVD matrix, dB mm6 m−3 (Numeric)}
   \item{e}{Kinetic energy computed from the DSVD matrix, J m−2 mm−1 (Numeric)}
   \item{mor}{Visibility computed from the DSVD matrix, m (Numeric)}
   \item{r_meas}{Precipitation intensity as reported by the disdrometer, mm h−1 (Numeric)}
   \item{z_meas}{Radar reflectivity as reported by the disdrometer, dB mm6 m−3 (Numeric)}
   \item{e_meas}{Kinetic energy as reported by the disdrometer, J m−2 h−1 (Numeric)}
   \item{mor_meas}{Visibility as reported by the disdrometer, m (Numeric)}
   \item{qual}{Data quality reported by the distrometer, 0-100 (Numeric)}
   \item{tmp}{Air temperature, ºC (Numeric)}
   \item{rh}{Relative humidity, 0-100 (Numeric)}
   \item{w}{Wind speed, m s-1 (Numeric)}
   \item{wd}{Wind direction, degrees (Numeric)}
   \item{np}{Number of drops detected computed from the DSVD matrix (Numeric)}
   \item{np_meas}{Number of drops detected as reported by the disdrometer (Numeric)}
   \item{lcurrent}{Laser control output, 1/100 mA (Numeric)}
   \item{ocontrol}{Optical control output, mV (Numeric)}
   \item{power}{Sensor power supply, V (Numeric)}
   \item{tmp_int}{Internal sensor temperature, ºC (Numeric)}
   \item{d10}{Particle diameter’s 10th percentile, mm (Numeric)}
   \item{d25}{Particle diameter’s 25th percentile, mm (Numeric)}
   \item{d50}{Particle diameter’s 50th percentile, mm (Numeric)}
   \item{d75}{Particle diameter’s 75th percentile, mm (Numeric)}
   \item{d90}{Particle diameter’s 90th percentile, mm (Numeric)}
   \item{dmean}{Mean particle diameter, mm (Numeric)}
   \item{v10}{Particle velocity’s 10th percentile, m s−1 (Numeric)}
   \item{v25}{Particle velocity’s 25th percentile, m s−1 (Numeric)}
   \item{v50}{Particle velocity’s 50th percentile, m s−1 (Numeric)}
   \item{v75}{Particle velocity’s 75th percentile, m s−1 (Numeric)}
   \item{v90}{Particle velocity’s 90th percentile, m s−1 (Numeric)}
   \item{vmean}{Mean particle velocity, m s−1 (Numeric)}
   \item{t_shift}{Telegram shift time, s (Numeric)}
   \item{nrow}{Telegram number of rows (Numeric)}
   \item{err}{Error status (Numeric)}
   \item{ncol}{Number of fields in the telegram (Numeric)}
}
}
\description{
\code{dsd_integrate} reads raw disdrometer data and computes a series of
integrated variables.
}
\details{
Currently, this is done via an external Perl script, so you need to have
Perl installed and working in your system. Beware: some users have reported
issues for running the Perl script in Windows.
It might be translated into a native R script in the future, if I find time
to do it.
}
\section{Bin interpolation}{

Since the particle size and velocity distribution is not linear within the
bins of the DSVD matrix, different imputation methods exist. 'middle' will
assing the middle bin size and velocity to all the particles in the bin; 
'uniform' assumes an uniform distribution of sizes and velocities within the
bin limits; and 'linear' assumes a linear distribution between the bin
limits.
}

\section{Error codes}{

\describe{
   \item{0}{No error}
   \item{1}{There is no telegram for that minute}
   \item{2}{Saturation: the limit of 9999 drops has been exceeded in at
   least one bin of the DSVD matrix (only for Thies)}
   \item{3}{Non conform characters found in SYNOP field}
   \item{4}{Non conform characters found in rain intensity field}
   \item{5}{9999.999 value found in rain intensity}
   \item{6}{The telegram only contains 'OK' or 'Version' (Parsivel)}
   \item{7}{Non conform characters found in the telegram}
   \item{21-23}{Parsivel error codes 1 to 3}
   \item{24-36}{Thies error codes 24 to 36}
   \item{37}{Multiple error codes in the telegram (Thies)}
}
}

\examples{

f <- system.file('extdata/rawDataParsivel', package='disdRo')
x <- dsd_integrate(f)
head(x)
summary(x)

}
